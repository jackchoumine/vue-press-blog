import{_ as t,o as d,c as e,R as a}from"./chunks/framework.bf742a9e.js";const u=JSON.parse('{"title":"常用的 tailwind 类","description":"","frontmatter":{},"headers":[],"relativePath":"vue3/常用的tailwind类.md","filePath":"vue3/常用的tailwind类.md"}'),r={name:"vue3/常用的tailwind类.md"},o=a('<h1 id="常用的-tailwind-类" tabindex="-1">常用的 tailwind 类 <a class="header-anchor" href="#常用的-tailwind-类" aria-label="Permalink to &quot;常用的 tailwind 类&quot;">​</a></h1><p>按照属性对元素的影响，将 css 属性分类别来学习，这些属性的顺序也常常是 css 书写顺序，<code>按照这种属性</code>书写，更容易维护，常见的编码规范都大致按照这个顺序。</p><p><code>布局</code>、<code>定位</code>、<code>尺寸</code>、<code>文本样式</code>、<code>背景</code>、<code>轮廓和阴影</code>、<code>动画</code>、<code>其他（伪元素、伪类等）</code>，类名也按照这个顺序写，方便维护。</p><h2 id="布局" tabindex="-1">布局 <a class="header-anchor" href="#布局" aria-label="Permalink to &quot;布局&quot;">​</a></h2><h3 id="display" tabindex="-1">display <a class="header-anchor" href="#display" aria-label="Permalink to &quot;display&quot;">​</a></h3><table><thead><tr><th>类名</th><th>属性值</th></tr></thead><tbody><tr><td>block</td><td>block</td></tr><tr><td>hidden</td><td>none</td></tr><tr><td>inline</td><td>inline</td></tr><tr><td>inline-block</td><td>inline-block</td></tr><tr><td>flex</td><td>flex</td></tr><tr><td>grid</td><td>grid</td></tr><tr><td>table</td><td>table</td></tr></tbody></table><p>常用的值，就是这些。none 对应 hidden，display 值和类名一致。</p><h3 id="flex-是布局重点" tabindex="-1">flex 是布局重点 <a class="header-anchor" href="#flex-是布局重点" aria-label="Permalink to &quot;flex 是布局重点&quot;">​</a></h3><p>容器属性</p><p><code>flex-direction</code>、<code>flex-wrap</code>、<code>flex-flow</code>、<code>justify-content</code>、<code>align-items</code>、<code>align-content</code></p><p>主轴方向<code>flex-direction</code>：</p><table><thead><tr><th>类名</th><th>属性值</th></tr></thead><tbody><tr><td>flex-row</td><td>row</td></tr><tr><td>flex-row-reverse</td><td>row-reverse</td></tr><tr><td>flex-col</td><td>column</td></tr><tr><td>flex-col-reverse</td><td>column-reverse</td></tr></tbody></table><p>主轴是否换行<code>flex-wrap</code>：</p><table><thead><tr><th>类名</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>flex-nowrap</td><td>nowrap</td><td></td></tr><tr><td>flex-wrap</td><td>wrap</td><td></td></tr><tr><td>flex-wrap-reverse</td><td>wrap-reverse</td><td>换行后反转</td></tr></tbody></table><p>主轴对齐<code>justify-content</code>：</p><table><thead><tr><th>类名</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>justify-start</td><td>flex-start</td><td></td></tr><tr><td>justify-center</td><td>center</td><td></td></tr><tr><td>justify-end</td><td>flex-end</td><td></td></tr><tr><td>justify-between</td><td>space-between</td><td>空间平分在 item 之间</td></tr><tr><td>justify-around</td><td>space-around</td><td>空间环绕</td></tr><tr><td>justify-evenly</td><td>space-evenly</td><td>前两种的结合</td></tr></tbody></table><p>交叉轴对齐<code>align-items</code>：</p><table><thead><tr><th>类名</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>items-start</td><td>flex-start</td><td></td></tr><tr><td>items-center</td><td>center</td><td></td></tr><tr><td>items-end</td><td>flex-end</td><td></td></tr><tr><td>items-baseline</td><td>baseline</td><td></td></tr><tr><td>items-stretch</td><td>stretch</td><td></td></tr></tbody></table><p>交叉轴的空间分配<code>align-content</code>，即元素有多行的时候：</p><table><thead><tr><th>类名</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>content-start</td><td>flex-start</td><td></td></tr><tr><td>content-center</td><td>center</td><td></td></tr><tr><td>content-end</td><td>flex-end</td><td></td></tr><tr><td>content-between</td><td>space-between</td><td></td></tr><tr><td>content-around</td><td>around</td><td></td></tr><tr><td>content-evenly</td><td>space-evenly</td><td></td></tr></tbody></table><p>项目属性</p><p><code>order</code>、<code>flex</code>、<code>flex-grow</code>、<code>flex-shrink</code>、<code>flex-basis</code>、<code>align-self</code></p><h3 id="更多阅读" tabindex="-1">更多阅读 <a class="header-anchor" href="#更多阅读" aria-label="Permalink to &quot;更多阅读&quot;">​</a></h3><p><a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="noreferrer">A Complete Guide to Flexbox</a></p><h2 id="定位" tabindex="-1">定位 <a class="header-anchor" href="#定位" aria-label="Permalink to &quot;定位&quot;">​</a></h2><h2 id="尺寸" tabindex="-1">尺寸 <a class="header-anchor" href="#尺寸" aria-label="Permalink to &quot;尺寸&quot;">​</a></h2><h2 id="文本样式" tabindex="-1">文本样式 <a class="header-anchor" href="#文本样式" aria-label="Permalink to &quot;文本样式&quot;">​</a></h2><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><h2 id="轮廓和阴影" tabindex="-1">轮廓和阴影 <a class="header-anchor" href="#轮廓和阴影" aria-label="Permalink to &quot;轮廓和阴影&quot;">​</a></h2><h2 id="动画" tabindex="-1">动画 <a class="header-anchor" href="#动画" aria-label="Permalink to &quot;动画&quot;">​</a></h2><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2>',31),l=[o];function n(c,i,h,s,b,f){return d(),e("div",null,l)}const x=t(r,[["render",n]]);export{u as __pageData,x as default};
