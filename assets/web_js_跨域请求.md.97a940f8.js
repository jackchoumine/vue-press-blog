import{_ as s,o as n,c as a,R as l}from"./chunks/framework.bf742a9e.js";const A=JSON.parse('{"title":"跨域请求","description":"","frontmatter":{},"headers":[],"relativePath":"web/js/跨域请求.md","filePath":"web/js/跨域请求.md"}'),p={name:"web/js/跨域请求.md"},o=l(`<h1 id="跨域请求" tabindex="-1">跨域请求 <a class="header-anchor" href="#跨域请求" aria-label="Permalink to &quot;跨域请求&quot;">​</a></h1><p>一个域上的文档或者脚本试图请求另一个域下的资源，就是跨域。比如</p><ul><li>资源跳转：a 链接、重定向、表单提交；</li><li>资源引入：link、script、img、iframe 等标签，css background:url()、font-face;</li></ul><h2 id="同源限制-狭义的跨域" tabindex="-1">同源限制--狭义的跨域 <a class="header-anchor" href="#同源限制-狭义的跨域" aria-label="Permalink to &quot;同源限制--狭义的跨域&quot;">​</a></h2><p>同源策略（same origin policy）是一种<strong>浏览器</strong>安全策略，即<strong>只允许浏览器</strong>向同源的服务器请求资源（<em>请求还是会发送，服务器也会响应，只是响应被浏览器拦截了</em>），可避免浏览器遭到 xss、csfr 等攻击。同源：<strong>协议</strong>+<strong>域名</strong>+<strong>端口</strong>三者相同，即使不同的域指向同一个 ip，也非同源。</p><p>同源限制了几种行为：</p><ul><li>Cookie、LocalStorage 和 IndexDB 无法获取；</li><li>DOM 和 JS 对象无法获得；</li><li>AJAX 返回值不能获取。</li></ul><p>容易混淆的跨域：</p><p><a href="http://www.domain.com/a.js" target="_blank" rel="noreferrer">http://www.domain.com/a.js</a></p><p><a href="http://192.168.4.12/b.js" target="_blank" rel="noreferrer">http://192.168.4.12/b.js</a></p><blockquote><p>域名和域名对应相同 ip 不允许</p></blockquote><p><a href="http://www.domain.com/a.js" target="_blank" rel="noreferrer">http://www.domain.com/a.js</a></p><p><a href="http://x.domain.com/b.js" target="_blank" rel="noreferrer">http://x.domain.com/b.js</a></p><p><a href="http://domain.com/c.js" target="_blank" rel="noreferrer">http://domain.com/c.js</a></p><blockquote><p>主域相同，子域不同 不允许</p></blockquote><h2 id="跨域解决方案" tabindex="-1">跨域解决方案 <a class="header-anchor" href="#跨域解决方案" aria-label="Permalink to &quot;跨域解决方案&quot;">​</a></h2><ul><li>JSONP</li><li>CORS</li><li>WebSocket</li><li>node 中间件代理</li></ul><p>还有其他一些方法，本文主要介绍 JSONP 和 CORS。</p><h3 id="jsonp-实现跨域" tabindex="-1">jsonp 实现跨域 <a class="header-anchor" href="#jsonp-实现跨域" aria-label="Permalink to &quot;jsonp 实现跨域&quot;">​</a></h3><p><strong>原理</strong>：具有 <strong>src</strong> 属性的标签在请求资源时，不受同源策略限制（历史遗留问题），可以通过这些标签（img、script 等）加载外域的脚本，在本域执行，实际是加载一个函数调用。</p><p>例如：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 在 http://127.0.0.1:8016/ 的页面内有一下标签 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">localHandler</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- jsonp.js 脚本里有 localHandler 函数，该函数在本域有定义，加载该脚本后就会执行本域的 localHandler 处理数据  --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/jsonp.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//http://localhost:3001 域下有如下脚本 jsonp.js</span></span>
<span class="line"><span style="color:#82AAFF;">localHandler</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">24</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p><code>关键</code>：外域上的脚本是一个执行函数，函数参数是一个对象或者 JSON ,且与本域的处理函数同名。</p></blockquote><p>问题：外域的脚本是写死了，我们如何统一本域和外域的函数名呢？</p><p>改进 1：在 src 传递过去就好，其实还可传递其他参数。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">localHandler</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 在本域传递参数 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:3001/jsonp.js?callback=localHandler&amp;id=abc8848</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>外域服务端处理：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//node 代码</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> query </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(req</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">query</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> callback </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> query</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">callback </span><span style="color:#676E95;font-style:italic;">// 本地传递过来的本地函数名</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> query</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id </span><span style="color:#676E95;font-style:italic;">// 假设根据id，查询数据库，获取用户信息 userInfo</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> userInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">24</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> callback </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(userInfo) </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 将处理函数和传递的数据组合</span></span>
<span class="line"><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#A6ACCD;">(response)</span></span>
<span class="line"><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">end</span><span style="color:#A6ACCD;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>问题：在本域 script 标签写死了，动态插入，会更加好。</p><p>改进 2：动态插入 script 标签。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//本域动态插入 script 标签</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//处理返回数据</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> localHandler </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 提供 jsonp 服务的 url 地址（生成的返回值都是一段javascript代码）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 将处理函数传递给服务端，这里查询 id 为 abc8848 的用户信息</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:3001/jsonp?callback=localHandler&amp;id=abc8848</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建script标签，设置其属性</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> script </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">script</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">script</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAttribute</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> url)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 把script标签加入 head，此时调用开始</span></span>
<span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementsByTagName</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">head</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appendChild</span><span style="color:#A6ACCD;">(script)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>外域服务端处理：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// node 代码</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> query </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(req</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">query</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> callback </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> query</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">callback </span><span style="color:#676E95;font-style:italic;">//本地传递过来的本地函数名</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> query</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id </span><span style="color:#676E95;font-style:italic;">// 假设根据 id，查询数据库，获取用户信息 userInfo</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> userInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">24</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> callback </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(userInfo) </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//将处理函数和传递的数据组合</span></span>
<span class="line"><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#A6ACCD;">(response)</span></span>
<span class="line"><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">end</span><span style="color:#A6ACCD;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>jquery AJAX 跨域</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(document)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ready</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">$</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ajax</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">get</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      async</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:3001/jsonp?id=abc8848</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      dataType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jsonp</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      jsonp</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">callback</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback)</span></span>
<span class="line"><span style="color:#F07178;">      jsonpCallback</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">localHandler</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名，也可以写&quot;?&quot;，jQuery会自动为你处理数据</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">done</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">json</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">json</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fail</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>外域服务处理同上。</p><p>jsonp 的优缺点：</p><p><strong>优点</strong></p><ul><li>所有浏览器都支持。</li><li>简单。</li></ul><p><strong>缺点</strong></p><ul><li>由于返回的数据当成脚本执行，会存在脚本注入的安全问题。</li><li>只能发一次请求。</li><li>只能使用 GET 方法。</li><li>不好处理请求错误。</li></ul><h3 id="cors-跨域" tabindex="-1">cors 跨域 <a class="header-anchor" href="#cors-跨域" aria-label="Permalink to &quot;cors 跨域&quot;">​</a></h3><p>CORS 需要浏览器和服务器同时支持。目前主流浏览器都都支持 cors，cors 通信过程浏览器自动完成，和同源通信无差别。cors 关键是服务器，只要服务器设置了 CORS，就能实现跨域请求。</p><h4 id="两种请求" tabindex="-1">两种请求 <a class="header-anchor" href="#两种请求" aria-label="Permalink to &quot;两种请求&quot;">​</a></h4><p>满足以下两个条件的是简单请求，否则为非简单请求。</p><ul><li>请求方法为：GET|POST|HEAD</li><li>请求头部超出以下字段： <ul><li>Accept|Accept-Language|Content-Language|Last-Event-ID</li><li>Content-Type 的值限制在<code>application/x-www-form-urlencoded</code>|<code>multipart/form-data</code>|<code>text/plain</code>。</li></ul></li></ul><p>简单请求和非简单请求，浏览器处理不同。</p><h4 id="简单请求" tabindex="-1">简单请求 <a class="header-anchor" href="#简单请求" aria-label="Permalink to &quot;简单请求&quot;">​</a></h4><p>简单请求，浏览器器直接发出 CORS 请求，会<strong>自动</strong>在请求头中增加 <code>Origin</code> 字段，告诉服务器，本次请求从哪个源（<strong>协议+域名+端口号</strong>）发起，服务器根据该源，决定是否同意本次请求。</p><p>服务响应头信息<code>Access-Control-Allow-Origin</code>包含源，则同意请求，否则出错，触发 XHR 的 error 事件。注意，这种错误无法根据状态码识别，因为可能为 200。</p><p>简单请求，响应头信息除了<code>Access-Control-Allow-Origin</code>字段必须设置外，可选地设置以下字段：</p><p><code>Access-Control-Allow-Credentials</code>：布尔值，是否允许发起者获取响应内容。CORS 默认发送 Cookie，但是响应不携带<code>Access-Control-Allow-Credential:true</code>，浏览器不会把响应内容返回给请求的发起者（即该请求拿不到响应）。不需要携带认证信息，可设置请求<code>xhr.withCredentials = false;</code>。附带认证的请求，<code>Access-Control-Allow-Origin</code>必须设置一个具体的值，否则请求将失败。响应中携带 <code>Set-Cookie</code>字段，尝试对 Cookie 进行修改，失败会抛出异常。</p><p><code>Access-Control-Expose-Headers</code>：CORS 请求时，XHR 的<code>getResponseHeader()</code>只能拿到 6 个头信息：<code>Cache-Control</code>|<code>Content-Language</code>|<code>Content-Type</code>|<code>Expires</code>|<code>Last-Midified</code>|<code>Pragma</code>。想获取到其他字段，必须在这个响应头里指定。</p><h4 id="非简单请求" tabindex="-1">非简单请求 <a class="header-anchor" href="#非简单请求" aria-label="Permalink to &quot;非简单请求&quot;">​</a></h4><p>非简单请求，在发送实际请求之前，会发送一个预请求（preflight），以确定跨域信息。跨域信息包括：**允许跨域的域 + 方法 + 请求 URL + 特殊的请求头字段 + credentials **。跨域信息符合实际请求，才会发起实际请求，否则报错。通过预检请求会，在跨域缓存时间内，不会再发起预检请求。</p><p>实际请求：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://api.alice.com/cors</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> xhr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">XMLHttpRequest</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">xhr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">PUT</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> url</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// PUT</span></span>
<span class="line"><span style="color:#A6ACCD;">xhr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setRequestHeader</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">X-Custom-Header</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">//自定义请求头</span></span>
<span class="line"><span style="color:#A6ACCD;">xhr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>浏览器检测到非简单请求，会发情预检请求：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">OPTIONS </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">cors HTTP</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">1.1</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// OPTIONS 方法，询问跨域信息</span></span>
<span class="line"><span style="color:#FFCB6B;">Origin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">http</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//api.bob.com // 将要跨域的源</span></span>
<span class="line"><span style="color:#A6ACCD;">Access</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Control</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Request</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> PUT  </span><span style="color:#676E95;font-style:italic;">// 将要跨域的方法</span></span>
<span class="line"><span style="color:#A6ACCD;">Access</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Control</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Request</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> X</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Custom</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Header </span><span style="color:#676E95;font-style:italic;">// 跨域自定义字段，用逗号分隔的字符串。</span></span>
<span class="line"><span style="color:#FFCB6B;">Host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">alice</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#A6ACCD;">Accept</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Language</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> en</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">US</span></span>
<span class="line"><span style="color:#FFCB6B;">Connection</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> keep</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">alive</span></span>
<span class="line"><span style="color:#A6ACCD;">User</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Agent</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Mozilla</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">5.0</span><span style="color:#89DDFF;">...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>预请求响应：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">HTTP</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">1.1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#A6ACCD;"> OK</span></span>
<span class="line"><span style="color:#FFCB6B;">Date</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Mon</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> Dec </span><span style="color:#F78C6C;">2008</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">15</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">39</span><span style="color:#A6ACCD;"> GMT</span></span>
<span class="line"><span style="color:#FFCB6B;">Server</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Apache</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">2.0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">61</span><span style="color:#A6ACCD;"> (Unix)</span></span>
<span class="line"><span style="color:#A6ACCD;">Access</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Control</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Allow</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Origin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">http</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//api.bob.com // 允许跨域的源 必需的</span></span>
<span class="line"><span style="color:#A6ACCD;">Access</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Control</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Allow</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Methods</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> GET</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> POST</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PUT </span><span style="color:#676E95;font-style:italic;">// 允许跨域的请求方法 必需的</span></span>
<span class="line"><span style="color:#A6ACCD;">Access</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Control</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Allow</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> X</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Custom</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Header </span><span style="color:#676E95;font-style:italic;">// 允许跨域的请求头字段 必需的</span></span>
<span class="line"><span style="color:#A6ACCD;">Access</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Control</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Max</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1728000</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 缓存跨域请求的时间，单位为秒，非必需</span></span>
<span class="line"><span style="color:#A6ACCD;">Access</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Control</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Allow</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Credentials</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 响应内容控制，非必需</span></span>
<span class="line"><span style="color:#A6ACCD;">Content</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> text</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">html</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> charset</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">utf</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">8</span></span>
<span class="line"><span style="color:#A6ACCD;">Content</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> gzip</span></span>
<span class="line"><span style="color:#A6ACCD;">Content</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Length</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">Keep</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Alive</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> timeout</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">100</span></span>
<span class="line"><span style="color:#FFCB6B;">Connection</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Keep</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Alive</span></span>
<span class="line"><span style="color:#A6ACCD;">Content</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> text</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">plain</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>实际请求满足预请求响应，会自动发送实际请求，否则触发 error 事件。通过了预检请求，以后只要在跨域缓存时间内（注意，URL 变了，跨域缓存信息也会失效），就和简单请求一样，携带 <code>Origin</code> 字段，服务器响应，有<code>Access-Control-Allow-Origin</code>字段。</p><p>实际请求：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">PUT </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">cors HTTP</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">1.1</span></span>
<span class="line"><span style="color:#FFCB6B;">Origin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">http</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//api.bob.com</span></span>
<span class="line"><span style="color:#FFCB6B;">Host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> api</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">alice</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span>
<span class="line"><span style="color:#A6ACCD;">X</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Custom</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Header</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> value</span></span>
<span class="line"><span style="color:#A6ACCD;">Accept</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Language</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> en</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">US</span></span>
<span class="line"><span style="color:#FFCB6B;">Connection</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> keep</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">alive</span></span>
<span class="line"><span style="color:#A6ACCD;">User</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Agent</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Mozilla</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">5.0</span><span style="color:#89DDFF;">...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>实际响应（部分字段）：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Access</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Control</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Allow</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Origin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">http</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//api.bob.com</span></span>
<span class="line"><span style="color:#A6ACCD;">Content</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> text</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">html</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> charset</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">utf</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">8</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="cors-优劣" tabindex="-1">CORS 优劣 <a class="header-anchor" href="#cors-优劣" aria-label="Permalink to &quot;CORS 优劣&quot;">​</a></h4><p>优点：</p><ul><li>支持的方法多；</li><li>更加安全。</li></ul><p>缺点：</p><ul><li>老旧浏览器不支持；</li><li>会多发请求。</li></ul><p>相比 CORS 的优点，缺点可忽略。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://www.jianshu.com/p/b55086cbd9af" target="_blank" rel="noreferrer">前端 | 浅谈 preflight request</a></p>`,75),e=[o];function r(t,c,y,D,F,C){return n(),a("div",null,e)}const b=s(p,[["render",r]]);export{A as __pageData,b as default};
