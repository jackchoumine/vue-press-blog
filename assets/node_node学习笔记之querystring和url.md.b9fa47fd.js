import{_ as s,o as n,c as a,R as l}from"./chunks/framework.bf742a9e.js";const C=JSON.parse('{"title":"node 核心模块之 querystring 和 url","description":"","frontmatter":{},"headers":[],"relativePath":"node/node学习笔记之querystring和url.md","filePath":"node/node学习笔记之querystring和url.md"}'),p={name:"node/node学习笔记之querystring和url.md"},o=l(`<h1 id="node-核心模块之-querystring-和-url" tabindex="-1">node 核心模块之 querystring 和 url <a class="header-anchor" href="#node-核心模块之-querystring-和-url" aria-label="Permalink to &quot;node 核心模块之 querystring 和 url&quot;">​</a></h1><p>querystring 用于解析和序列化查询字符串。 url 是和整个 url 相关的模块</p><h2 id="querystring" tabindex="-1">querystring <a class="header-anchor" href="#querystring" aria-label="Permalink to &quot;querystring&quot;">​</a></h2><h3 id="两个常用方法" tabindex="-1">两个常用方法： <a class="header-anchor" href="#两个常用方法" aria-label="Permalink to &quot;两个常用方法：&quot;">​</a></h3><ol><li>解析方法： parse</li></ol><ul><li>parse(queryStr[,sep=&#39;&amp;&#39;[,eq=&#39;=&#39;[,options]]]) <code>queryStr</code> —— 查询字符串，往往是 key1=value1&amp;key2=value2&amp;key2=value3 的形式; <code>前面没 ？</code><code>sep</code>:界定 键值对 的分割符，默认 &#39;<code>&amp;</code>&#39;; <code>eq</code>:界定 键值 的分割符，默认 &#39;<code>=</code>&#39;; <code>options</code>:对象，decodeURIComponent：解码查询字符串时用到的函数，默认 <code>querystring.unescape()</code><code>mayKeys</code>:number,解析的键的最大数量，默认 1000。 返回值：类似{key1:value1,key2:[value2,value3]}的对象。<code>不继承自 Object,也就是无Object 类的方法。如： toString()、hasOwnProperty()。</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> qs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">querystring</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> url </span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">newwindow=1&amp;ei=heGsW4zNM-TY9AOmmavoBQ&amp;q=https+%E6%A8%A1%E5%9D%97+nodejs&amp;oq=https+%E6%A8%A1%E5%9D%97+nodejs&amp;gs_l=psy-ab.3..</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">query </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> qs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(url</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(query)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">{ newwindow: &#39;1&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  ei: &#39;heGsW4zNM-TY9AOmmavoBQ&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  q: &#39;https 模块 nodejs&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  oq: &#39;https 模块 nodejs&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  gs_l: &#39;psy-ab.3..&#39; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol start="2"><li>序列化方法：stringify</li></ol><ul><li>stringify(queryObj[,sep=&#39;&amp;&#39;[,eq=&#39;=&#39;[,options]]]) 与 parse 相反的操作。 queryObjet 属性的类型为 string/string[]/number/number[]/boolean/boolean[] ，则属性值会被序列化。其他类型值会被转为<code>空字符串</code>。options 没有 maxkeys 属性。</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> qs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">querystring</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> queryStr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> qs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">foo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">baz</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">students</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tom</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(queryStr) </span><span style="color:#676E95;font-style:italic;">//foo=bar&amp;baz=jack&amp;students=jack&amp;students=tom</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="url" tabindex="-1">url <a class="header-anchor" href="#url" aria-label="Permalink to &quot;url&quot;">​</a></h2><p>url 模块的功能有生成 、解析、拼接 URL。</p><h3 id="生成-url" tabindex="-1">生成 URL() <a class="header-anchor" href="#生成-url" aria-label="Permalink to &quot;生成 URL()&quot;">​</a></h3><p>URL(input[.base]) input 要解析的 url ,url 是相对 url, 则要解析 base</p><p>###解析 url url.parse(url[,queryObject]) queryObject 为 true 时，查询字符串会转为一个<code>对象</code>。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">url</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> myURL </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://user:pass@sub.host.com:8080/p/a/t/h?query=string#hash</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(myURL</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">query)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">Url {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  protocol: &#39;https:&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  slashes: true,//斜杠</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  auth: &#39;user:pass&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  host: &#39;sub.host.com:8080&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  port: &#39;8080&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  hostname: &#39;sub.host.com&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  hash: &#39;#hash&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  search: &#39;?query=string&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  query: &#39;query=string&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  pathname: &#39;/p/a/t/h&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  path: &#39;/p/a/t/h?query=string&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  href: &#39;https://user:pass@sub.host.com:8080/p/a/t/h?query=string#hash&#39; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><code>常见用法：</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">url</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> myURL </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://user:pass@sub.host.com:8080/p/a/t/h?query=string#hash</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(myURL</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">query) </span><span style="color:#676E95;font-style:italic;">// {query:&#39;string}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(myURL</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path) </span><span style="color:#676E95;font-style:italic;">///p/a/t/h?query=string  不含 hash</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(myURL</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">pathname) </span><span style="color:#676E95;font-style:italic;">///p/a/t/h 只有路径</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="format-urlobj-options-将-url-对象-转为字符串。" tabindex="-1">format(urlObj[,options]),将 URL 对象，转为字符串。 <a class="header-anchor" href="#format-urlobj-options-将-url-对象-转为字符串。" aria-label="Permalink to &quot;format(urlObj[,options]),将 URL 对象，转为字符串。&quot;">​</a></h3><p>options:</p><ul><li>fragment=false，</li><li>unicode=false，是否采用 Unicode 编码集；</li><li>auth=false，是否显示认证信息。</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">url</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> myURL </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">URL</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://a:b@你好你好?abc#foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(myURL</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">href)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出 https://a:b@xn--6qqa088eba/?abc#foo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(myURL</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出 https://a:b@xn--6qqa088eba/?abc#foo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// url 的format 可控制函数输出形式</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">format</span><span style="color:#A6ACCD;">(myURL</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">fragment</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">unicode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">auth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出 &#39;https://你好你好/?abc&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="resolve-form-to-拼接-url" tabindex="-1">resolve(form,to) 拼接 url <a class="header-anchor" href="#resolve-form-to-拼接-url" aria-label="Permalink to &quot;resolve(form,to) 拼接 url&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/one/two/three</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">four</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &#39;/one/two/four&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://example.com/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/one</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &#39;http://example.com/one&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://example.com/one</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/two</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &#39;http://example.com/two&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,24),e=[o];function r(t,c,y,i,D,A){return n(),a("div",null,e)}const u=s(p,[["render",r]]);export{C as __pageData,u as default};
