import{_ as e,o as a,c as t,R as i}from"./chunks/framework.bf742a9e.js";const u=JSON.parse('{"title":"this","description":"","frontmatter":{},"headers":[],"relativePath":"web/js/手写绑定函数.md","filePath":"web/js/手写绑定函数.md"}'),r={name:"web/js/手写绑定函数.md"},o=i('<h1 id="this" tabindex="-1">this <a class="header-anchor" href="#this" aria-label="Permalink to &quot;this&quot;">​</a></h1><p>this</p><h2 id="this-绑定规则" tabindex="-1">this 绑定规则 <a class="header-anchor" href="#this-绑定规则" aria-label="Permalink to &quot;this 绑定规则&quot;">​</a></h2><p><strong>this 是函数调用上下文，是一个对象，是伴随着函数调用产生的，谁调用函数，就指向谁。</strong></p><p>具体来说，有四条绑定规则或者函数有四种调用方式：</p><ul><li>独立调用，指向<code>window</code>，比如<code>hello()</code>；</li><li>对象属性，指向当前对象，<code>obj.hello()</code>；</li><li><code>new</code> 调用函数，指向创建的对象；</li><li><code>bind</code>、<code>call</code>、<code>apply</code> 调用，修改 this。</li></ul><h3 id="默认绑定到-window" tabindex="-1">默认绑定到 window <a class="header-anchor" href="#默认绑定到-window" aria-label="Permalink to &quot;默认绑定到 window&quot;">​</a></h3><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://wufenfen.github.io/2017/03/03/%E3%80%90%E8%AF%91%E3%80%91%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0JavaScript%E9%97%AD%E5%8C%85/" target="_blank" rel="noreferrer">【译】深入学习 JavaScript 闭包</a></li><li><a href="https://stackoverflow.com/questions/34696686/what-is-lexical-this" target="_blank" rel="noreferrer">What is lexical &#39;this&#39;?</a></li><li><a href="https://dmitripavlutin.com/gentle-explanation-of-this-in-javascript/" target="_blank" rel="noreferrer">Gentle Explanation of &quot;this&quot; in JavaScript</a></li><li><a href="http://ryanmorr.com/understanding-scope-and-context-in-javascript/" target="_blank" rel="noreferrer">understanding-scope-and-context-in-javascript</a></li><li><a href="https://creeperyang.github.io/2015/01/JavaScript-dynamic-scope-vs-static-scope/" target="_blank" rel="noreferrer">从 static/dynamic scope 来谈 JS 的作用域</a></li><li><a href="https://wcc723.github.io/javascript/2017/12/12/javascript-this/" target="_blank" rel="noreferrer">铁人赛：JavaScript 的 this 到底是谁？</a></li></ul>',9),n=[o];function l(s,c,h,d,p,_){return a(),t("div",null,n)}const b=e(r,[["render",l]]);export{u as __pageData,b as default};
