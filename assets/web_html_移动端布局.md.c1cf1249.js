import{_ as s,o as a,c as n,R as l}from"./chunks/framework.bf742a9e.js";const C=JSON.parse('{"title":"移动端布局","description":"","frontmatter":{},"headers":[],"relativePath":"web/html/移动端布局.md","filePath":"web/html/移动端布局.md"}'),e={name:"web/html/移动端布局.md"},p=l(`<h1 id="移动端布局" tabindex="-1">移动端布局 <a class="header-anchor" href="#移动端布局" aria-label="Permalink to &quot;移动端布局&quot;">​</a></h1><h2 id="常见布局" tabindex="-1">常见布局 <a class="header-anchor" href="#常见布局" aria-label="Permalink to &quot;常见布局&quot;">​</a></h2><p>流式布局、flex 布局、rem布局</p><h2 id="css-常见单位" tabindex="-1">CSS 常见单位 <a class="header-anchor" href="#css-常见单位" aria-label="Permalink to &quot;CSS 常见单位&quot;">​</a></h2><h3 id="相当单位" tabindex="-1">相当单位 <a class="header-anchor" href="#相当单位" aria-label="Permalink to &quot;相当单位&quot;">​</a></h3><p><code>em</code>、<code>rem</code>、<code>ex</code>、<code>%</code>、<code>vh</code>、<code>vw</code></p><blockquote><p>为了方便计算和适配用户浏览器的的字体大小，使用 <code>rem</code> 进行布局布局时，根元素的字体大小设置为<code>62.5%</code>，浏览器默认字体大小是 16px , 则根元素字体大小就为<code>10px</code>了。</p></blockquote><h3 id="绝对单位" tabindex="-1">绝对单位 <a class="header-anchor" href="#绝对单位" aria-label="Permalink to &quot;绝对单位&quot;">​</a></h3><p>参考资源：</p><ul><li><a href="https://www.tutorialrepublic.com/css-tutorial/css-units.php" target="_blank" rel="noreferrer">CSS Units</a></li></ul><h2 id="媒体查询" tabindex="-1">媒体查询 <a class="header-anchor" href="#媒体查询" aria-label="Permalink to &quot;媒体查询&quot;">​</a></h2><p>媒体查询（media query）：根据不同屏幕尺寸应用不同的样式，CSS3 的语法。</p><p>语法：</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@media</span><span style="color:#A6ACCD;"> mediaType and|or|only </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">media feature</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  //</span><span style="color:#FFCB6B;">css-code</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>使用 <code>@media</code> 标识媒体查询语法；</li><li>mediaType 是媒体特性；</li><li>and or only 是条件运算，连接多个媒体类型和媒体特性；</li><li>media feature 是媒体特性，小括号包围。</li></ul><p>不同的设备被划分为不同的媒体类型，常见的媒体类型：</p><p>all 所有设备；</p><p>print 打印机或者打印预览；</p><p>screen 电脑屏幕、平板电脑、智能手机；</p><p>媒体特性，即检测到屏幕是如何，比如宽度是多少，常使用宽度。</p><p>width 屏幕可见区域的宽度；</p><p>min-width 屏幕可见区域的最小宽度；</p><p>max-width 屏幕可见区域的最大宽度。</p><p>屏幕宽度 540px 以下，背景为白色；541--970 为红色；970以上为绿色。</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">max-width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">540px</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">body</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">fff</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">541px</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">max-width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">969px</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">body</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">970px</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">body</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> green</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>屏幕小于等于800px时，body变为红色。</p><p>媒体特性的排列技巧：</p><blockquote><p>把宽度从小到大地写，即小宽度的媒体查询写在前面，大宽度的写在后面，充分利用 CSS 的层叠性，可少写一些特性，使得代码更加简洁。</p></blockquote><blockquote><p>常见错误是在媒体查询特性中少写单位。</p></blockquote><p>比如上面的媒体查询，当屏幕大于等于 970px 时，背景变成绿色，第二个媒体查询条件被覆盖，所以第二个媒体查询可这样写：</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">541px</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">body</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="根据媒体查询使用样式文件" tabindex="-1">根据媒体查询使用样式文件 <a class="header-anchor" href="#根据媒体查询使用样式文件" aria-label="Permalink to &quot;根据媒体查询使用样式文件&quot;">​</a></h2><p><code>link</code> 标签引入样式表时，可设置<code>media</code>属性，根据媒体查询条件使用不同的样式文件。</p><blockquote><p>所有样式文件都会先加载，因为满足媒体查询条件时，再去请求样式，可能来不及了。一个弊端就是网络中传输的文件会增加。</p></blockquote><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">link</span><span style="color:#A6ACCD;"> rel=&quot;stylesheet&quot; href=&quot;white.css&quot; media=&quot;screen and (</span><span style="color:#FFCB6B;">max-width</span><span style="color:#A6ACCD;">:540px)&quot;</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,35),o=[p];function c(r,t,i,D,d,y){return a(),n("div",null,o)}const b=s(e,[["render",c]]);export{C as __pageData,b as default};
