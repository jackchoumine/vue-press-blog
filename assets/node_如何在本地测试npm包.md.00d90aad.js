import{_ as n,o as a,c as s,R as p}from"./chunks/framework.bf742a9e.js";const g=JSON.parse('{"title":"如何优雅地在本地测试 npm 包","description":"","frontmatter":{},"headers":[],"relativePath":"node/如何在本地测试npm包.md","filePath":"node/如何在本地测试npm包.md"}'),e={name:"node/如何在本地测试npm包.md"},l=p(`<h1 id="如何优雅地在本地测试-npm-包" tabindex="-1">如何优雅地在本地测试 npm 包 <a class="header-anchor" href="#如何优雅地在本地测试-npm-包" aria-label="Permalink to &quot;如何优雅地在本地测试 npm 包&quot;">​</a></h1><p>需要发布<code>my-npm</code>，想在<code>my-project</code>项目内测试<code>my-npm</code></p><p><code>my-npm</code> 是 npm 的名字，不一定和项目名字相同，为了方便，开发 my-npm 的项目名字也叫 my-npm。</p><h2 id="三种方法" tabindex="-1">三种方法 <a class="header-anchor" href="#三种方法" aria-label="Permalink to &quot;三种方法&quot;">​</a></h2><blockquote><ol><li>npm link</li></ol></blockquote><p>my-npm build 后，执行 <code>npm link</code>，然后 my-project <code>npm link my-npm</code></p><p>测试完毕，在 my-project <code>npm unlink my-npm</code> 释放软连接。</p><p><strong>推荐这种方式，优点：my-npm 再次构建后，在 my-project 直接得到变更后的代码</strong></p><blockquote><ol start="2"><li>yalc 模拟仓库</li></ol></blockquote><p>全局安装 <code>npm i yalc -g</code></p><p>my-npm build 后， 执行 <code>yalc public</code>， my-project <code>yalc add my-npm</code></p><p>缺点：再次构建后，还需要在<code>my-project</code>安装，有点繁琐。</p><blockquote><ol start="3"><li>npm i . -g</li></ol></blockquote><p>my-npm build 后， 执行<code>npm i . -g</code>，然后 my-project <code>npm link my-npm</code></p><p>测试完毕，my-project <code>npm unlink my-npm</code> 释放软连接。</p><h2 id="这些命令做了啥" tabindex="-1">这些命令做了啥 <a class="header-anchor" href="#这些命令做了啥" aria-label="Permalink to &quot;这些命令做了啥&quot;">​</a></h2><p>link 和 npm i . 都在 npm 的全局 node_modules 内创建了链接到 npm 的软连接。</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gu9ki7kssoj61680audhp02.jpg" alt="安装依赖"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gu9k6nqr5hj60kk07w3z002.jpg" alt="npm link"></p><p>yalc 则在项目模拟了一个仓库，在 yarn add 本地的 npm 包。</p><p>本质是简化了<code>yarn add file:npm-path</code>。</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gubnsr8rouj60jy08iglw02.jpg" alt="npm 被移入项目"></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># yalc add 之后</span></span>
<span class="line"><span style="color:#FFCB6B;">&quot;j-form-table&quot;</span><span style="color:#82AAFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">file:.yalc/j-form-table</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>常用的 yalc 命令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yalc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">publish</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 发布</span></span>
<span class="line"><span style="color:#FFCB6B;">yalc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm-name</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 安装进入项目</span></span>
<span class="line"><span style="color:#FFCB6B;">yalc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 升级npm</span></span>
<span class="line"><span style="color:#FFCB6B;">yalc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remove</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm-name</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 移除 npm</span></span>
<span class="line"><span style="color:#FFCB6B;">yalc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm-name</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 查看 npm 的目录</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="关于-npmignore" tabindex="-1">关于 npmignore <a class="header-anchor" href="#关于-npmignore" aria-label="Permalink to &quot;关于 npmignore&quot;">​</a></h2><p><code>npmignore</code> 排除资源，使 npm 体积减少。</p><p>不配置 npmignore</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gu9jsldf2vj60ea0nkwfn02.jpg" alt="不添加.npmignore"></p><p>配置了 npmignore</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gu9ju6n8cxj60ey0gc3zc02.jpg" alt="添加.npmignore后"></p><p><code>package.json</code>的 files 字段，指定发布到 npm 的文件。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://maecapozzi.com/how-to-locally-test-an-npm-package/" target="_blank" rel="noreferrer">如何在本地测试 npm 包</a></p><p><a href="https://blog.csdn.net/terrychinaz/article/details/112976268" target="_blank" rel="noreferrer">如何减少 npm 包的体积</a></p>`,35),o=[l];function t(c,r,i,m,d,y){return a(),s("div",null,o)}const h=n(e,[["render",t]]);export{g as __pageData,h as default};
