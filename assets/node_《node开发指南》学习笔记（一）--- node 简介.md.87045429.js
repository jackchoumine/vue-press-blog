import{_ as e,o,c as n,R as a}from"./chunks/framework.bf742a9e.js";const m=JSON.parse('{"title":"《node 开发指南》学习笔记（一）--- node 简介","description":"","frontmatter":{},"headers":[],"relativePath":"node/《node开发指南》学习笔记（一）--- node 简介.md","filePath":"node/《node开发指南》学习笔记（一）--- node 简介.md"}'),d={name:"node/《node开发指南》学习笔记（一）--- node 简介.md"},t=a('<h1 id="《node-开发指南》学习笔记-一-node-简介" tabindex="-1">《node 开发指南》学习笔记（一）--- node 简介 <a class="header-anchor" href="#《node-开发指南》学习笔记-一-node-简介" aria-label="Permalink to &quot;《node 开发指南》学习笔记（一）--- node 简介&quot;">​</a></h1><h2 id="node-是什么" tabindex="-1">node 是什么 <a class="header-anchor" href="#node-是什么" aria-label="Permalink to &quot;node 是什么&quot;">​</a></h2><p>node 是一个能让 JS 运行在服务端的<strong>开发平台</strong>，由 Ryan Dahl 2009 年 基于 V8 开发。JS 为客户端而生，node 为网路而生。node 内置了 HTTP 服务器支持，能便捷的实现一个网站和服务器的组合。其他 PHP、Perl ，需要搭建一个 类似 Apache 的服务器。</p><h2 id="node-能做什么" tabindex="-1">node 能做什么 <a class="header-anchor" href="#node-能做什么" aria-label="Permalink to &quot;node 能做什么&quot;">​</a></h2><ul><li>网站</li><li>web 应用</li><li>web socket 服务器</li><li>命令行工具</li><li>带有图形界面的本地程序</li></ul><h2 id="异步-i-o-和事件驱动" tabindex="-1">异步 I/O 和事件驱动 <a class="header-anchor" href="#异步-i-o-和事件驱动" aria-label="Permalink to &quot;异步 I/O 和事件驱动&quot;">​</a></h2><p>node 最大的特点：采用异步 I/O 和事件驱动的架构设计。 node 在执行时，会维护一个事件队列，I/O 请求到达后，会被推送至事件队里进行处理，程序继续往后执行，前一个 I/O 完成后，后一个事件会被推进事件队列继续处理。 node 的异步机制是<strong>基于事件</strong>的，I/0 操作的结果由事件循环来处理。 node 进程同一时刻只会处理一个事件，完成后立即进入事件检查并处理后续事件。</p>',7),_=[t];function r(i,l,s,c,h,p){return o(),n("div",null,_)}const f=e(d,[["render",r]]);export{m as __pageData,f as default};
